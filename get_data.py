# Import packagesimport osimport timeimport pandas as pdimport spotipyfrom spotipy.oauth2 import SpotifyClientCredentialsfrom dotenv import load_dotenv# Set working directory# Get env variablesos.chdir('/Users/umreenimam/documents/coding/data_analysis/music_analysis')load_dotenv()spotify_id = os.getenv('client_id')spotify_secret = os.getenv('client_secret')spotify_username = os.getenv('username')coldplay_id = os.getenv('playlist_id')# Connect to Spotify APIclient_cred_manager = SpotifyClientCredentials(spotify_id, spotify_secret)sp = spotipy.Spotify(client_credentials_manager = client_cred_manager)# Get tracks & id's def getTracks(user, playlist_id): 	ids = []	playlist = sp.user_playlist(user, playlist_id)	for item in playlist['tracks']['items']:		track = item['track']		ids.append(track['id'])	return idsids = getTracks(spotify_username, coldplay_id)# Get all track info using IDsdef getTrackFeatures(id):    meta = sp.track(id)    features = sp.audio_features(id)        # meta information    name = meta['name']    album = meta['album']['name']    artist = meta['album']['artists'][0]['name']    release_date = meta['album']['release_date']    length = meta['duration_ms']    popularity = meta['popularity']        # track features    acoustic = features[0]['acousticness']    danceability = features[0]['danceability']    energy = features[0]['energy']    instrumentalness = features[0]['instrumentalness']    liveness = features[0]['liveness']    loudness = features[0]['loudness']    speechiness = features[0]['speechiness']    tempo = features[0]['tempo']    time_signature = features[0]['time_signature']        track = [name, album, artist, release_date, length, popularity, acoustic, danceability, energy, instrumentalness, liveness, loudness, speechiness, tempo, time_signature]    return track # Loop over tracks and and create dataframetracks = []for i in range(len(ids)):    time.sleep(.5)    track = getTrackFeatures(ids[i])    tracks.append(track)    tracks_df = pd.DataFrame(tracks, columns = ['name', 'album', 'artist', 'release_date', 'length', 'popularity', 'acoustic', 'danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'time_signature' ])tracks_df.to_csv('coldplay_tracks.csv', sep = ',')"""""""""""""""Track Features name: album: album nameartist: artist namerelease_date: release date of albumlength: track lengthpopularity: song popularity of song between 0 and 100acoustic: confidence measure from 0.0 to 1.0; 1.0 high confidence that track is acousticdanceability: how suitable track is for dancing ; 0.0 to 1.0; 1.0 most danceableenergy: measure of intesity and activity; 0.0 to 1.0; tracks feel fast, loud, and noisyinstrumentalness: Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.liveness: Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.loudness: overall loudness of track in decibels; oudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db. speechiness: Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.tempo: The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.time_sgnature: An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure)."""""""""""""""